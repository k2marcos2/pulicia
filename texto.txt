function doPost(e) {
  try {
    const SPREADSHEET_ID = "1rF19ZUm0FymIjWRU5Qhzn_LkGmJT1i9akgyskPEsrr4";
    const SHEET_NAME = "RESPOSTAS";
    const DRIVE_FOLDER_ID = "1hpZIm3OedEs82yeLN6IG-z3RUu9QMv3w";

    const sheet = SpreadsheetApp.openById(SPREADSHEET_ID).getSheetByName(SHEET_NAME);
    const folder = DriveApp.getFolderById(DRIVE_FOLDER_ID);
    const params = e.parameter;

    Logger.log(JSON.stringify(params));

    let midiaLinks = [];
    for (let key in params) {
      if (key.startsWith("MidiaBase64_")) {
        const base64 = params[key].split(',')[1];
        const blob = Utilities.newBlob(Utilities.base64Decode(base64), "image/jpeg", `foto_${Date.now()}.jpg`);
        const file = folder.createFile(blob);
        file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
        midiaLinks.push(getDirectDownloadLink(file));
      }
    }

    let assinaturaURL = "Sem assinatura";
    if (params.AssinaturaBase64) {
      const base64Data = params.AssinaturaBase64.split(',')[1];
      const blob = Utilities.newBlob(Utilities.base64Decode(base64Data), "image/png", `assinatura_${params.Motorista}_${Date.now()}.png`);
      const file = folder.createFile(blob);
      file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);
      assinaturaURL = getDirectDownloadLink(file);
    }

    const pdfURL = gerarChecklistPDF(params, assinaturaURL, midiaLinks);

    const novaLinha = [
      new Date(),
      params.Motorista || "",
      params.PostoGraduacao || "",
      params.RG || "",
      params.DataCautela || "",
      params.HoraCautela || "",
      params.ValidadeCNH || "",
      params.CategoriaCNH || "",
      params.Veiculo || "",
      params.Prefixo || "",
      params.Placa || "",
      params.KmAtual || "",
      params.KmProxRevisao || "",
      params.NivelAgua || "",
      params.NivelOleo || "",
      params.NivelCombustivel || "",
      params.Pneus || "",
      params.GiroflexSirene || "",
      params.LampadasQueimadas || "",
      params.Parabrisa || "",
      params.Radio || "",
      params.EquipamentosObrigatorios || "",
      params.QtdCones || "",
      params.OutrosProblemas || "",
      midiaLinks.join(" | "),
      assinaturaURL,
      pdfURL
    ];

    sheet.appendRow(novaLinha);

    return ContentService.createTextOutput(JSON.stringify({
      status: "success",
      message: "Checklist enviado e PDF gerado!",
      pdf: pdfURL
    })).setMimeType(ContentService.MimeType.JSON);

  } catch (err) {
    return ContentService.createTextOutput(JSON.stringify({
      status: "error",
      message: err.toString()
    })).setMimeType(ContentService.MimeType.JSON);
  }
}

function getDirectDownloadLink(file) {
  return "https://drive.google.com/uc?export=download&id=" + file.getId();
}

code do PDF.gs

function gerarChecklistPDF(data, assinaturaURL, midiaLinks) {
  const folderId = '1hpZIm3OedEs82yeLN6IG-z3RUu9QMv3w';  // 游녤 coloque aqui o ID da pasta onde salva os PDFs
  const templateId = '1FoRErwkfgz1otLS1PGwRoFpAWC_qth3V2vNmDP9_ge4'; // 游녤 coloque aqui o ID do arquivo de slide modelo

  // Cria uma c칩pia do template no Drive
  const copy = DriveApp.getFileById(templateId).makeCopy(`Checklist - ${data.Motorista}`, DriveApp.getFolderById(folderId));
  const presentation = SlidesApp.openById(copy.getId());
  const slide = presentation.getSlides()[0];

  let y = 20;
  const margin = 30;
  const larguraCaixa = 540;

  slide.insertTextBox("CHECKLIST DE CAUTELA DE VIATURAS", margin, y, larguraCaixa, 30)
       .getText().getTextStyle().setBold(true).setFontSize(20);
  y += 40;

  slide.insertTextBox("DADOS DO MOTORISTA", margin, y, larguraCaixa, 20)
       .getText().getTextStyle().setBold(true);
  y += 25;

  const dadosPrincipais = [
    `Motorista: ${data.Motorista}`,
    `Posto/Gradua칞칚o: ${data.PostoGraduacao}`,
    `RG: ${data.RG}`,
    `Data Cautela: ${data.DataCautela}`,
    `Hora: ${data.HoraCautela}`,
    `Validade CNH: ${data.ValidadeCNH}`,
    `Categoria CNH: ${data.CategoriaCNH}`,
    `Ve칤culo: ${data.Veiculo}`,
    `Prefixo: ${data.Prefixo}`,
    `Placa: ${data.Placa}`,
    `Km Atual: ${data.KmAtual}`,
    `Km Pr칩x. Revis칚o: ${data.KmProxRevisao}`
  ];

  dadosPrincipais.forEach(item => {
    slide.insertTextBox(item, margin, y, larguraCaixa, 20);
    y += 22;
  });

  y += 20;

  slide.insertTextBox("CHECKLIST DE VERIFICA칂츾O", margin, y, larguraCaixa, 20)
       .getText().getTextStyle().setBold(true);
  y += 25;

  const checklistTecnico = [
    `N칤vel de 츼gua: ${data.NivelAgua}`,
    `N칤vel de 칍leo: ${data.NivelOleo}`,
    `Combust칤vel: ${data.NivelCombustivel}`,
    `Pneus: ${data.Pneus}`,
    `Giroflex/Sirene: ${data.GiroflexSirene}`,
    `L칙mpadas Queimadas: ${data.LampadasQueimadas}`,
    `Parabrisa: ${data.Parabrisa}`,
    `R치dio: ${data.Radio}`
  ];

  checklistTecnico.forEach(item => {
    slide.insertTextBox(item, margin, y, larguraCaixa, 20);
    y += 22;
  });

  y += 20;

  slide.insertTextBox("EQUIPAMENTOS E OBSERVA칂칏ES", margin, y, larguraCaixa, 20)
       .getText().getTextStyle().setBold(true);
  y += 25;

  slide.insertTextBox(`Equipamentos Obrigat칩rios: ${data.EquipamentosObrigatorios}`, margin, y, larguraCaixa, 40);
  y += 45;
  slide.insertTextBox(`Qtd Cones: ${data.QtdCones}`, margin, y, larguraCaixa, 20);
  y += 25;
  slide.insertTextBox(`Outros Problemas: ${data.OutrosProblemas}`, margin, y, larguraCaixa, 40);
  y += 45;

  if (midiaLinks.length > 0) {
    slide.insertTextBox("M칈DIAS", margin, y, larguraCaixa, 20)
         .getText().getTextStyle().setBold(true);
    y += 25;
    slide.insertTextBox(`${midiaLinks.join(" | ")}`, margin, y, larguraCaixa, 40);
    y += 50;
  }

  if (assinaturaURL && assinaturaURL !== "Sem assinatura") {
    slide.insertTextBox("ASSINATURA", margin, y, larguraCaixa, 20)
         .getText().getTextStyle().setBold(true);
    y += 25;
    const blob = UrlFetchApp.fetch(assinaturaURL).getBlob();
    slide.insertImage(blob, margin, y, 200, 60);
    y += 70;
  }

  presentation.saveAndClose();

  const pdf = DriveApp.getFileById(presentation.getId()).getAs("application/pdf");
  const folder = DriveApp.getFolderById(folderId);
  const pdfFile = folder.createFile(pdf);
  pdfFile.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.VIEW);

  return "https://drive.google.com/uc?export=download&id=" + pdfFile.getId();
}
